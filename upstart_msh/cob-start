#!/bin/bash
ROBOT=myrobotname
DISTRO=mydistro
USER=myuser
pcs="
$ROBOT-b1
$ROBOT-t1
$ROBOT-t2
$ROBOT-t3
$ROBOT-s1
$ROBOT-h1"

pcs_cameras="
$ROBOT-t1
$ROBOT-t3
$ROBOT-s1"

if (su $USER -l -c "tmux has-session -t 'bringup' 2> /dev/null"); then
  logger -p user.info "Bringup already running. Exiting"
  echo "Bringup already running. Exiting"
  exit
fi

for i in $pcs; do 
    Alive=False
    while [[ $Alive=False]]
    do
        ping -c 1 -w 3 $i
        if [ $? -ne 0 ] ; then
          Alive=False
          echo $i not found
        else
          Alive=True
          echo $i alive
          break
        fi
        sleep 1
    done
done

for i in $pcs_cameras; do 
    Check_cam=False
    while [[ $Check_cam=False ]]
      do
        if ssh $i stat /tmp/check_done \> /dev/null 2\>\&1
          then
            echo "File exists"
            Check_cam=True
            break
          else
            echo "File still does not exist"
        fi
      sleep 1
    done
done

function log() {
  logger -s -p user.$1 ${@:2}
}

source /etc/ros/$DISTRO/cob.d/setup/setup.sh
JOB_FOLDER=/etc/ros/$DISTRO/cob.d/launch/robot
export ROSLAUNCH_SSH_UNKNOWN=1 
LAUNCH_FILENAME=/tmp/robot.launch.launch
export ROS_IP=`rosrun robot_upstart getifip eth0`
export ROS_MASTER_URI=http://$ROS_IP:11311
export ROS_LOG_DIR=/tmp
rosrun robot_upstart mklaunch $JOB_FOLDER robot:=$ROBOT > $LAUNCH_FILENAME

#start roscore inside tmux sessiond2
su $USER -l -c "tmux new -d -s roscore"
su $USER -l -c "tmux send -t roscore.0 'sh /etc/ros/$DISTRO/cob.d/roscore_start.sh' ENTER"

#wait for roscore
until rostopic list; do sleep 1; done

#start bringup inside tmux session
su $USER -l -c "tmux new -d -s bringup"
su $USER -l -c "tmux send -t bringup 'sh /etc/ros/$DISTRO/cob.d/robot_launch.sh' ENTER"

until rosparam get /robot_description > /dev/null ; do sleep 1; done

su $USER -l -c "ssh $ROBOT-t2 'tmux new -d -s sm'"
roslaunch_command="roslaunch\ msh_statemachine\ machine.launch"
su $USER -l -c "ssh $ROBOT-t2 'tmux send -t sm $roslaunch_command ENTER'"
